name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test

    - name: Run test coverage
      run: npm run test:coverage

    - name: Setup Docker
      run: |
        docker --version
        docker compose version

    - name: Run e2e tests
      if: matrix.node-version == '20.x'  # Only run full e2e tests on Node 20.x
      env:
        DB_HOST: 127.0.0.1
      timeout-minutes: 15
      run: |
        echo "Running MySQL e2e tests..."
        npm run test:e2e
        echo "Running PostgreSQL e2e tests..."
        npm run test:e2e:postgres
        echo "Running SQLite e2e tests..."
        npm run test:e2e:sqlite

    - name: Run basic e2e test (MySQL only)
      if: matrix.node-version == '18.x'  # Run basic test on Node 18.x
      env:
        DB_HOST: 127.0.0.1
      timeout-minutes: 10
      run: npm run test:e2e

    - name: Build project
      run: npm run build

    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check formatting
      run: npm run format:check

    - name: Run linting
      run: npm run lint

  build-and-validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Check if build files exist
      run: |
        if [ ! -d "dist" ]; then
          echo "Build failed - dist directory not found"
          exit 1
        fi
        if [ ! -f "dist/index.js" ]; then
          echo "Build failed - index.js not found"
          exit 1
        fi
        if [ ! -f "dist/index.d.ts" ]; then
          echo "Build failed - index.d.ts not found"
          exit 1
        fi

    - name: Test package installation
      run: npm pack

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          dist/
          *.tgz